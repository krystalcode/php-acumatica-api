<?php

namespace KrystalCode\Acumatica\Api\Session;

use KrystalCode\Acumatica\Api\Configuration;

/**
 * Interface for the Acumatica session manager implementations.
 *
 * The session manager is responsible for managing an Acumatica session.
 * Currently, this involves authenticating into the Acumatica instance before
 * being able to make API requests. The authentication is automatically
 * performed by the Discovery when preparing an API client.
 */
interface SessionManagerInterface
{
    /**
     * Sets the configuration for the session.
     *
     * @param \KrystalCode\Acumatica\Api\Configuration $config
     *   The configuration object.
     */
    public function setConfiguration(Configuration $config): void;

    /**
     * Returns the configuration for the session.
     *
     * @return \KrystalCode\Acumatica\Api\Configuration
     *   The configuration object.
     */
    public function getConfiguration(): Configuration;

    /**
     * Sets the options for the session.
     *
     * Options that session managers should support are:
     * - session_duration (?int): The expected duration (in seconds) of sessions
     *   managed by the manager. If set, the session manager must ensure that
     *   any authentication credentials - e.g. access token - are valid for at
     *   least this much time. Whether there is a maximum supported session
     *   duration depends on the authentication mechanism used by the session
     *   manager, which should clearly document this.
     *
     * The session manager may support additional options.
     *
     * @param array $options
     *   The options array.
     */
    public function setOptions(array $options): void;

    /**
     * Returns the options for the session.
     *
     * @return array
     *   The options array.
     */
    public function getOptions(): array;

    /**
     * Ensures we have an active session with Acumatica.
     *
     * This method should do the following:
     * - Open a session, request a cookie or access token, as needed by the
     *   authentication method being used by this session manager.
     * - Ensure that the session has sufficient time before its expiration
     *   respecting the requested time limit (see options).
     * - Pass the credentials to the client using the setter methods appropriate
     *   to the authentication method being used by this session manager.
     *
     * @param object $client
     *   The OpenAPI generated API client that will be used for making requests.
     * @param array $options
     *   An associative array of options. Currently supported options are:
     *   - session_duration: (int, optional) When set, the session manager
     *     should ensure that session is valid for at least the given amount in
     *     seconds. For example, if an access token is used, ensure that its
     *     expiration time is at least `session_duration` seconds in the future
     *     from the moment this method is called.
     *
     * @return object
     *   The client configuration that corresponds to the API configuration of
     *   the session, with authentication data generated by this connection set
     *   (e.g. access token).
     *
     * @throws \KrystalCode\Acumatica\Api\Exception\Connection
     *   When a connection could not be established, or when the requested
     *   session duration could not be guaranteed.
     */
    public function connect(): object;
}
